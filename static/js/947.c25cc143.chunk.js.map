{"version":3,"file":"static/js/947.c25cc143.chunk.js","mappings":"+PAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEC,QADV,oCAGT,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,gGAEJH,EAAAA,EAAAA,IAAA,8BAAiCG,IAF7B,cAErBC,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BC,QAAQC,IAAI,KAAMC,SALS,yDAAH,sDASjBC,EAAoB,mCAAG,6GAEPT,EAAAA,EAAAA,IAAA,uBAFO,cAExBI,EAFwB,yBAGvBA,EAASC,MAHc,gCAK9BC,QAAQC,IAAI,KAAMC,SALY,yDAAH,qDAUlBE,EAAW,mCAAG,WAAMC,GAAN,gGAEAX,EAAAA,EAAAA,IAAA,iBAAoBW,IAFpB,cAEjBP,EAFiB,yBAGhBA,EAASC,MAHO,gCAKvBC,QAAQC,IAAI,KAAMC,SALK,yDAAH,qD,6JCpBbI,EAAe,WAC1B,OAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQJ,GAAYK,EAAAA,EAAAA,MAAZL,QAcR,IAZAM,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA+BN,GAA/B,iGAEuBD,EAAAA,EAAAA,IAAYC,GAFnC,OAEUN,EAFV,OAIIU,EAASV,GAJb,gDAMIa,EAAAA,GAAAA,MAAY,iBAAkB,CAAEC,SAAU,MAN9C,yDADc,yBAAC,SAAD,2BAUdC,CAAgBT,EACjB,GAAE,CAACA,IACAU,OAAOC,KAAKR,GAAOS,OAAS,EAAG,CACjC,IAAQC,EAAuDV,EAAvDU,MAAOC,EAAgDX,EAAhDW,aAAcC,EAAkCZ,EAAlCY,SAAUC,EAAwBb,EAAxBa,OAAQC,EAAgBd,EAAhBc,YACzCC,EAA2B,GAAfJ,EACZK,EAAcH,EAAOI,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAEzD,OACE,4BACE,gBACEC,IAAG,yCAAoCP,GACvCQ,IAAKZ,KAEP,wBAAKA,KACL,yCACc,4BAAOK,EAAP,WAEd,sCACA,uBAAIH,KACJ,oCACA,uBAAII,MAGT,CACF,C","sources":["api/api.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e3ec3e6b497e3ef8943e45c84058b3f3';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchMoviesSearch = async query => {\n    try {\n      const response = await axios.get(`/search/movie?query=${query}`);\n      return response.data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\nexport const fetchTrendingMoovies = async () => {\n    try {\n      const response = await axios.get(`/trending/movie/day`);\n      return response.data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  \n  \n  export const fetchMovies = async movieId => {\n    try {\n      const response = await axios.get(`/movie/${movieId}`);\n      return response.data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  \n  export const fetchCast = async movieId => {\n    try {\n      const response = await axios.get(`/movie/${movieId}/credits`);\n      return response.data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  \n  export const fetchReview = async movieId => {\n    try {\n      const response = await axios.get(`/movie/${movieId}/reviews`);\n      return response.data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchMovies } from \"../../api/api\";\n\nexport const MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getFetchMoovies(movieId) {\n      try {\n        const data = await fetchMovies(movieId);\n\n        setMovie(data);\n      } catch (error) {\n        toast.error('Page not found', { duration: 3000 });\n      }\n    }\n    getFetchMoovies(movieId);\n  }, [movieId]);\n  if (Object.keys(movie).length > 0) {\n    const { title, vote_average, overview, genres, poster_path } = movie;\n    const userScore = vote_average * 10;\n    const movieGenres = genres.map(genre => genre.name).join(', ');\n\n    return (\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt={title}\n        />\n        <h2>{title}</h2>\n        <p>\n          User score: <span>{userScore}%</span>\n        </p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <p>{movieGenres}</p>\n      </div>\n    );\n  }\n};\n"],"names":["axios","api_key","fetchMoviesSearch","query","response","data","console","log","message","fetchTrendingMoovies","fetchMovies","movieId","MovieDetails","useState","movie","setMovie","useParams","useEffect","toast","duration","getFetchMoovies","Object","keys","length","title","vote_average","overview","genres","poster_path","userScore","movieGenres","map","genre","name","join","src","alt"],"sourceRoot":""}