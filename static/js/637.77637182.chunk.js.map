{"version":3,"file":"static/js/637.77637182.chunk.js","mappings":"+PACA,GAAgB,UAAY,2BAA2B,KAAO,sBAAsB,OAAS,wBAAwB,QAAU,0B,SCChH,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAC9B,OACE,gBAAKC,UAAWC,EAAAA,UAAhB,UACE,eAAID,UAAWC,EAAAA,KAAf,SACGF,EAAQG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,gBAAIL,UAAWC,EAAAA,GAAf,WACE,cAAGD,UAAWC,EAAAA,OAAd,SAA0BG,KAC1B,cAAGJ,UAAWC,EAAAA,QAAd,SAA2BI,MAFFF,EADhB,OASpB,CCTY,SAASG,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOV,EAAP,KAAgBW,EAAhB,KAqBA,IAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,WAAMT,GAAN,mGAEGU,EAAAA,EAAAA,IAAYV,GAFf,UAEVW,EAFU,QAGVC,EAASD,EAAKE,QAAQd,KAAI,kBAA8B,CAC5DC,GAD8B,EAAGA,GAEjCC,OAF8B,EAAOA,OAGrCC,QAH8B,EAAeA,QAAf,KAKpBY,OARI,sBASR,IAAIC,MAAM,IATF,OAWhBR,EAAWK,GAXK,kDAahBI,EAAAA,GAAAA,MAAY,oBAbI,0DAAH,sDAgBjBP,EAAYL,EACb,GAAE,CAACA,IACAa,OAAOC,KAAKtB,GAASkB,OAAS,EAChC,OACE,+BACE,SAACnB,EAAD,CAASC,QAASA,KAGzB,C","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reviews_container__2j80+\",\"list\":\"Reviews_list__okdpy\",\"author\":\"Reviews_author__CqYAZ\",\"content\":\"Reviews_content__13k0w\"};","import cl from \"./Reviews.module.css\"\n\nexport default function Reviews({ reviews }) {\n    return (\n      <div className={cl.container}>\n        <ul className={cl.list}>\n          {reviews.map(({ id, author, content }) => (\n            <li className={cl.li} key={id}>\n              <p className={cl.author}>{author}</p>\n              <p className={cl.content}>{content}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { fetchReview } from '../../api/api';\nimport  Reviews  from '../../components/Reviews';\n\nexport default function CastPage() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState({});\n\n  useEffect(() => {\n    const getCastInfo = async id => {\n      try {\n        const data = await fetchReview(id);\n        const result = data.results.map(({ id, author, content }) => ({\n          id,\n          author,\n          content,\n        }));\n        if (!result.length) {\n          throw new Error('');\n        }\n        setReviews(result);\n      } catch (error) {\n        toast.error('No reviews found');\n      }\n    };\n    getCastInfo(movieId);\n  }, [movieId]);\n  if (Object.keys(reviews).length > 0)\n    return (\n      <>\n        <Reviews reviews={reviews} />\n      </>\n    );\n}"],"names":["Reviews","reviews","className","cl","map","id","author","content","CastPage","movieId","useParams","useState","setReviews","useEffect","getCastInfo","fetchReview","data","result","results","length","Error","toast","Object","keys"],"sourceRoot":""}