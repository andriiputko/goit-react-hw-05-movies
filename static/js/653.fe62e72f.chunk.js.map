{"version":3,"file":"static/js/653.fe62e72f.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/components/MovieListItem/MovieListItem.module.css?83b7","components/MovieListItem/MovieListItem.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e3ec3e6b497e3ef8943e45c84058b3f3';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchMoviesSearch = async query => {\n    try {\n      const response = await axios.get(`/search/movie?query=${query}`);\n      return response.data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\nexport const fetchTrendingMoovies = async () => {\n    try {\n      const response = await axios.get(`/trending/movie/day`);\n      return response.data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  \n  \n  export const fetchMovies = async movieId => {\n    try {\n      const response = await axios.get(`/movie/${movieId}`);\n      return response.data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  \n  export const fetchCast = async movieId => {\n    try {\n      const response = await axios.get(`/movie/${movieId}/credits`);\n      return response.data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  \n  export const fetchReview = async movieId => {\n    try {\n      const response = await axios.get(`/movie/${movieId}/reviews`);\n      return response.data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieListItem_link__LGsEq\",\"title\":\"MovieListItem_title__Q3l1Y\"};","import { Link } from 'react-router-dom';\nimport cl from \"./MovieListItem.module.css\"\n\nconst MovieItem = ({ id, title }) => {\n  return (\n    <>\n      <li className={cl.li}>\n        <Link to={`/movies/${id}`} className={cl.link}>\n          <h3 className={cl.title}>{title}</h3>\n        </Link>\n      </li>\n    </>\n  );\n};\nexport default MovieItem;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\"};","import MovieListItem from \"../MovieListItem\";\nimport cl from \"./MovieList.module.css\"\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <ul className={cl.list} >\n      {movies.map(({ id, original_title }) => {\n        return <MovieListItem key={id} title={original_title} id={id} />;\n      })}\n    </ul>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__mp42q\",\"input\":\"Movies_input__OE3ef\",\"button\":\"Movies_button__hVjwG\"};","import { useSearchParams } from 'react-router-dom';\nimport { Formik, Field, Form } from 'formik';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { fetchMoviesSearch } from \"../../api/api\";\nimport { MoviesList } from \"../MovieList/MovieList\";\nimport cl from \"./Movies.module.css\";\n\nexport default function MoviesPageRender() {\n  const [movies, setMovies] = useState([]);\n  const [searhParams, setSearchParams] = useSearchParams();\n  // const { movieId } = useParams();\n  const query = searhParams.get('query') ?? '';\n\n  useEffect(() => {\n    const getFetchMovies = async searchQuery => {\n      try {\n        const data = await fetchMoviesSearch(searchQuery);\n        if (!data.results.length) {\n          throw new Error('No results found');\n        }\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n        toast.error('No results found', { duration: 3000 });\n      }\n    };\n    if (query === '') {\n      return;\n    }\n    getFetchMovies(query);\n  }, [query]);\n\n  return (\n    <>\n      <Formik\n        \n        initialValues={{ query: '' }}\n        onSubmit={({ query }, { resetForm }) => {\n          setSearchParams({ query });\n          resetForm();\n        }}\n      >\n        <Form className={cl.form}>\n          <Field className={cl.input} name=\"query\" type=\"text\" placeholder=\"Search movies\" />\n          <button className={cl.button} type=\"submit\">Search</button>\n        </Form>\n      </Formik>\n      {Object.keys(movies).length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n}"],"names":["axios","api_key","fetchMoviesSearch","query","response","data","console","log","message","fetchTrendingMoovies","fetchMovies","movieId","fetchCast","fetchReview","id","title","className","cl","to","MoviesList","movies","map","original_title","MovieListItem","MoviesPageRender","useState","setMovies","useSearchParams","searhParams","setSearchParams","get","useEffect","getFetchMovies","searchQuery","results","length","Error","toast","duration","initialValues","onSubmit","resetForm","name","type","placeholder","Object","keys"],"sourceRoot":""}